# --- CODE SNIPPETS BELOW ---

# Form.py : Address Validation
        
        # Validate the Address of the User
        # Get address data from cleaned data
        address = cleaned_data.get('address', '')
        city = cleaned_data.get('city', '')
        state = cleaned_data.get('state', '')
        zip_code = cleaned_data.get('zip_code', '')

        # Verify the address using the data marketplace service
        # https://datamarket.azure.com/dataset/melissadata/addresscheck
        full_address = "'{}, {}, {} {}'".format(address, city, state, zip_code)
        uri = "https://api.datamarket.azure.com/MelissaData/AddressCheck/v1/SuggestAddresses"
        data = {'Address':full_address, 'MaximumSuggestions':1, 'MinimumConfidence':0.25}
        account_key = 'YOUR_DATA_KEY_GOES_HERE'
        req = requests.get(uri, params=data, auth=('', account_key))

        # Parse the returned text
        new_address_combined, new_city, new_state, new_zip_code = self.parse_ugly_xml(req.text)

        # Compare entered address with validated address
        if new_address_combined != address or new_city != city or new_state != state or new_zip_code != zip_code:
            # Correct the address
            cleaned_data['address'] = new_address_combined
            cleaned_data['city'] = new_city
            cleaned_data['state'] = new_state
            cleaned_data['zip_code'] = new_zip_code
            raise forms.ValidationError("Your address was validated and updated with corrected content.  Please submit again if it is correct.")

# Views.py : Purchase Recommendations

    # Figure out recommended purchases.
    # Use data marketplace service to get recommendations
    # https://datamarket.azure.com/dataset/amla/mba
    uri = 'https://api.datamarket.azure.com/data.ashx/amla/mba/v1/Score'
    data = {'Id':'TRAINING_SET_NAME_GOES_HERE', 'Item':id}
    account_key = 'YOUR_DATA_KEY_GOES_HERE'
    req = requests.get(uri, params=data, auth=('', account_key))

    # Parse the returned text
    recommend = req.json()['ItemSet'][1:]

    # Make a list of Product objects for the view
    recommend_products = []
    for i in recommend:
        recommend_products.append(Product.objects.get(id=int(i)))


#templates/app/Product.html : Purchase Recommendations
	Uncomment Html Code
